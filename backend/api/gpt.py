import openai
from dotenv import load_dotenv
import os
import pathlib

# Load the environment variables from the .env file
env_path = pathlib.Path(__file__).resolve().parents[2] / '.env'
load_dotenv(dotenv_path=env_path)

# Set the OpenAI API key
openai.api_key = os.getenv("GPT_API_KEY")

def call_gpt_api(prompt):
    """
    Makes a call to the OpenAI GPT API with specified parameters using the chat completions interface.
    
    Parameters:
    - prompt: The prompt string for the chat completion.
    
    Returns:
    - The text generated by the GPT model.
    """
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": prompt}
            ]
        )
        # Assuming the structure of the response object fits this model
        # Adjust based on actual response if needed
        return response['choices'][0]['message']['content']
    except Exception as e:
        print(f"Error calling GPT API: {e}")

# Example usage
if __name__ == "__main__":
    prompt = "Compose a poem that explains the concept of recursion in programming."
    generated_text = call_gpt_api(prompt)
    print("Generated Text:", generated_text)
